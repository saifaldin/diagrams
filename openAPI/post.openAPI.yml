---
openapi: 3.0.0
info:
  description: "Post Service API Specs"
  version: 1.0.0
  title: Pickly Post Service
tags:
  - name: posts
    description: Posts endpoints
  - name: votes
  - name: media
paths:
  /posts:
    post:
      tags:
        - posts
      summary: Create a new post
      operationId: createPost
      requestBody:
        $ref: "#/components/requestBodies/post_creation_request"
      responses:
        201:
          description: Post Created Successfully
          $ref: "#/components/responses/created_post"
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
    get:
      tags:
        - "posts"
      summary: Get posts
      operationId: getPosts
      parameters:
        - in: query
          name: offset
          schema:
            type: number
          description: The number of items to skip before starting to collect the result set
        - in: query
          name: limit
          schema:
            type: number
          description: The numbers of items to return
      responses:
        200:
          description: Get all posts
          $ref: "#/components/responses/feed_response"
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
  /posts/{postid}/groups:
    post:
      tags:
        - posts
      summary: add option group to post
      operationId: createOptionsGroup
      requestBody:
        $ref: "#/components/requestBodies/options_group_creation"
      responses:
        201:
          description: Group Created Successfully
          $ref: "#/components/responses/created_options_group"
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
  /posts/{postid}:
    get:
      tags:
        - "posts"
      summary: Get single post
      operationId: getOnePost
      parameters:
        - in: path
          name: postid
          required: true
          schema:
            type: number
          description: id of post needed
      responses:
        200:
          description: Get post with the provided id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/single_post_response"
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
    patch:
      tags:
        - posts
      summary: patch post
      operationId: flagPostAsFinished
      requestBody:
        $ref: "#/components/requestBodies/post_finished_flag_request"
      responses:
        204:
          description: Post Flagged Successfully
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
    delete:
      tags:
        - "posts"
      summary: Delete one post
      operationId: deleteOnePost
      parameters:
        - in: path
          name: postid
          required: true
          schema:
            type: number
          description: id of post needed
      responses:
        204:
          description: Delete one post
          $ref: "#/components/responses/single_post_deletion_response"
        404:
          description: Not Found
          $ref: "#/components/responses/error_not_found"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
  /media:
    post:
      tags:
        - media
      summary: Add the media data related to a post
      operationId: uploadOneMedia
      requestBody:
        $ref: "#/components/requestBodies/media_creation_request"
      responses:
        200:
          description: Media were added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "acknowledged"
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized.
          $ref: "#/components/responses/error_unauthorized"
  /votes/{optionid}:
    put:
      tags:
        - "votes"
      summary: Add vote
      operationId: addVote
      parameters:
        - in: path
          name: optionid
          required: true
          schema:
            type: number
          description: id of option
      responses:
        200:
          description: Add vote on option
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    votes_count:
                      type: number
                    optionId:
                      type: string
        400:
          description: Bad request
          $ref: "#/components/responses/error_bad_request"
        401:
          description: Unauthorized
          $ref: "#/components/responses/error_unauthorized"
        409:
          description: Conflict when user votes twice on same option
          $ref: "#/components/responses/error_conflict"
components:
  schemas:
    options_group_creation_response:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image_url:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/options_creation_response"
          maxItems: 4
      required:
        - "id"
        - "options"
    options_group_creation_request:
      type: object
      properties:
        name:
          type: string
        options:
          type: array
          items:
            $ref: "#/components/schemas/options_creation_request"
    options_creation_response:
      type: object
      properties:
        id:
          type: string
        body:
          type: string
        image_url:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
          maxItems: 4
      required:
        - "id"
    options_creation_request:
      type: object
      properties:
        body:
          type: string
    media_creation_request:
      type: object
      properties:
        file:
          type: string
          format: binary
        entity_type:
          type: string
          enum:
            - post
            - group
            - option
        entity_id:
          type: string
    post_finished_flag_request:
      type: object
      properties:
        finished:
          type: boolean
    post_creation_request:
      type: object
      properties:
        caption:
          type: string
          example: "test caption"
        is_hidden:
          type: boolean
          example: false
        type:
          type: string
          enum: [text, image, mini_survey]
          example: "text_poll"
      required: ["is_hidden", "type"]
    single_post_response:
      type: object
      properties:
        user:
          type: object
          properties:
            id:
              type: string
              example: "some-id"
            name:
              type: string
              example: "John Doe"
            profile_pic:
              type: string
              example: "URL"
        id:
          type: string
          example: "some-id"
        caption:
          type: string
          example: "some-caption"
        is_hidden:
          type: boolean
          example: false
        created_at:
          type: string
          example: "13 May, 2020 UTC"
        type:
          type: string
          enum: [text, image, mini_survey]
          example: "text_poll"
        image_url:
          type: array
          items:
            type: object
            properties:
              url:
                type: string
          maxItems: 4
        options_groups:
          type: object
          properties:
            groups:
              type: array
              items:
                $ref: "#/components/schemas/options_group_creation_response"
              maxItems: 4
      required: ["created_at", "is_hidden", "id", "type", "options_groups"]
    generic_error:
      type: object
      properties:
        message:
          type: array
          items:
            type: string
          example: ["error1", "error2"]
        status_code:
          type: number
          default: 123
  requestBodies:
    options_group_creation:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  $ref: "#/components/schemas/options_group_creation_request"
    post_creation_request:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/post_creation_request"
    post_finished_flag_request:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/post_finished_flag_request"
    media_creation_request:
      required: true
      content:
        multipart/form-data:
          schema:
            $ref: "#/components/schemas/media_creation_request"
  securitySchemes:
    firebaseAuth:
      type: http
      scheme: bearer
  responses:
    created_options_group:
      description: Group created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              groups:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    options:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
    created_post:
      description: Post created successfully
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
                example: "some-id"
    feed_response:
      description: Get posts
      content:
        application/json:
          schema:
            type: object
            properties:
              postsCount:
                type: number
              posts:
                type: array
                items:
                  $ref: "#/components/schemas/single_post_response"
                maxItems: 4
    single_post_deletion_response:
      description: Post deleted
    error_bad_request:
      description: Bad Request Error occured
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/generic_error"
    error_unauthorized:
      description: Unauthorized.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/generic_error"
    error_conflict:
      description: Conflict when user votes twice on same option.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/generic_error"
    error_internal_server_error:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/generic_error"
    error_not_found:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/generic_error"
servers:
  - description: Try it Now
    url: https://pickly-posts-be-dev.m3ntorship.net/
